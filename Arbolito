#include <iostream>
#include <malloc.h> 

using namespace std;

struct empresa {
    char nombreEmpresa[25];
    int codigoRNT;
    empresa *izq;
    empresa *der;
};

empresa *raiz, *aux, *aux2; 

// Recursiva para posicionar una empresa en el árbol

void posicionar(empresa *aux, empresa *aux2){
    if(aux->codigoRNT < aux2->codigoRNT){
        if(aux2->izq == NULL){
            aux2->izq = aux;
        } else {
            aux2 = aux2->izq;
            posicionar(aux, aux2);
        }
    } else {
        if(aux2->der == NULL){
            aux2->der = aux;
        } else {
            aux2 = aux2->der;
            posicionar(aux, aux2);
        }
    }
}

// registrar una nueva empresa en el árbol
void registrar(){
    aux = ((struct empresa *) malloc (sizeof(struct empresa)));
    cout<<"Ingrese el nombre de la empresa: "<<endl;
    cin>>aux->nombreEmpresa;
    cout<<"Ingrese el codigo RNT: "<<endl;
    cin>>aux->codigoRNT;
    aux->izq = NULL;
    aux->der = NULL;
    if(!raiz){
        raiz = aux;
    } else {
        aux2 = raiz;
        posicionar(aux, aux2);
    }
} 

// Recorrido Preorden del árbol
void recorridoPreorden(empresa* raiz) {
    if (raiz != NULL) {
        cout << raiz->codigoRNT << " " << raiz->nombreEmpresa << endl;
        recorridoPreorden(raiz->izq);
        recorridoPreorden(raiz->der);
    }
}

// Recorrido Inorden del árbol
void recorridoInorden(empresa* raiz) {
    if (raiz != NULL) {
        recorridoInorden(raiz->izq);
        cout << raiz->codigoRNT << " " << raiz->nombreEmpresa << endl;
        recorridoInorden(raiz->der);
    }
}

// Recorrido Posorden del árbol
void recorridoPosorden(empresa* raiz) {
    if (raiz != NULL) {
        recorridoPosorden(raiz->izq);
        recorridoPosorden(raiz->der);
        cout << raiz->codigoRNT << " " << raiz->nombreEmpresa << endl;
    }
}

int main() {
    int opcion;

    do {
        cout << "1. Registrar una empresa" << endl;
        cout << "2. Recorrer en preorden" << endl;
        cout << "3. Recorrer en inorden" << endl;
        cout << "4. Recorrer en posorden" << endl;
        cout << "5. Salir" << endl;
        cout << "Ingrese su opcion: ";
        cin >> opcion;

        switch (opcion) {
            case 1:
                registrar();
                break;
            case 2:
                cout << "Recorrido preorden:" << endl;
                recorridoPreorden(raiz);
                break;
            case 3:
                cout << "Recorrido inorden:" << endl;
                recorridoInorden(raiz);
                break;
            case 4:
                cout << "Recorrido posorden:" << endl;
                recorridoPosorden(raiz);
                break;
            case 5:
                cout << "Saliendo..." << endl;
                break;
            default:
                cout << "Opción no válida. Intente de nuevo." << endl;
                break;
        }
    } while (opcion != 5);

    return 0;
}
